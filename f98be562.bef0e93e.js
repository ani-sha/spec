(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{158:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return c})),i.d(t,"metadata",(function(){return r})),i.d(t,"rightToc",(function(){return p})),i.d(t,"default",(function(){return l}));var n=i(2),a=i(10),o=(i(0),i(165)),c={id:"concepts",title:"Concepts",sidebar_label:"Concepts"},r={id:"concepts",title:"Concepts",description:"Specification concepts",source:"@site/../docs/concepts.md",permalink:"/docs/next/concepts",editUrl:"https://github.com/aerogear/GraphQLCRUD/edit/master/website/../docs/concepts.md",version:"next",sidebar_label:"Concepts",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/next/getting-started"},next:{title:"Reference implementations",permalink:"/docs/next/reference"}},p=[{value:"Specification concepts",id:"specification-concepts",children:[]},{value:"CRUD method",id:"crud-method",children:[]},{value:"Input types",id:"input-types",children:[]},{value:"Capabilities",id:"capabilities",children:[]},{value:"Variations",id:"variations",children:[]}],s={rightToc:p};function l(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"specification-concepts"},"Specification concepts"),Object(o.b)("p",null,"Specification uses following vocabulary to define GraphQL queries"),Object(o.b)("h2",{id:"crud-method"},"CRUD method"),Object(o.b)("p",null,"GraphQL CRUD defines different CRUD capabilities that represents\nvarious operations that can be executed on the set of the objects:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Create: creation of the object"),Object(o.b)("li",{parentName:"ul"},"Update: update of the any object properties"),Object(o.b)("li",{parentName:"ul"},"Delete: delete entire object by id "),Object(o.b)("li",{parentName:"ul"},"Get: get specific object by id"),Object(o.b)("li",{parentName:"ul"},"Find: find multiple objects using query")),Object(o.b)("h2",{id:"input-types"},"Input types"),Object(o.b)("p",null,"GraphQL CRUD defines common input type categories that can be used in various CRUD methods to define operations.\nFor example Create operation will use specific input type that does not require object ID."),Object(o.b)("h2",{id:"capabilities"},"Capabilities"),Object(o.b)("p",null,"GraphQL CRUD defines different capabilities that developers can enable to modify\nhow queries can be defined. Good example of this capabilities are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Pagination: Ability to paginate content"),Object(o.b)("li",{parentName:"ul"},"Filtering: Ability to peform filtering on specific fields"),Object(o.b)("li",{parentName:"ul"},"Countability: Ability to count number of entire for query"),Object(o.b)("li",{parentName:"ul"},"Consistency: Ability to verify if write operation is not overriding data.")),Object(o.b)("h2",{id:"variations"},"Variations"),Object(o.b)("p",null,"Apart from reference implementation GraphQL CRUD provides different variations\nof the queries and mutations that can be used for different needs."))}l.isMDXComponent=!0}}]);