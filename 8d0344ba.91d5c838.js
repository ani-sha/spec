(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{154:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(10),i=(n(0),n(167)),o={id:"gettingstarted",title:"Getting Started",sidebar_label:"Getting Started"},c={id:"gettingstarted",title:"Getting Started",description:"Introduction",source:"@site/../docs/getting-started.md",permalink:"/docs/next/gettingstarted",editUrl:"https://github.com/aerogear/GraphQLCRUD/edit/master/website/../docs/getting-started.md",version:"next",sidebar_label:"Getting Started",sidebar:"docs",next:{title:"Concepts",permalink:"/docs/next/concepts"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Rationale",id:"rationale",children:[]},{value:"Targets of GraphQL CRUD",id:"targets-of-graphql-crud",children:[]},{value:"Non-targets of GraphQL CRUD",id:"non-targets-of-graphql-crud",children:[]}],p={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"GraphQL CRUD is a superset of the GraphQL specification that gives developers\npatterns for building standard, data-driven GraphQL APIs.\nGraphQL CRUD is a fully ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://facebook.github.io/graphql/"}),"GraphQL-compliant")," specification that provides patterns for access and modification of data.\nFor example, this GraphQL CRUD query retrieves a single user:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  user(where: { id: 4 }) {\n    name\n  }\n}\n")),Object(i.b)("p",null,"and returns the following response:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "user": {\n    "name": "Mark Zuckerberg"\n  }\n}\n')),Object(i.b)("h2",{id:"rationale"},"Rationale"),Object(i.b)("p",null,"GraphQL is a flexible query language supporting many different data access patterns.\nFor most projects, CRUD operations turn out to be a very common pattern. Defining this pattern enables the community to build tooling specific to it."),Object(i.b)("h2",{id:"targets-of-graphql-crud"},"Targets of GraphQL CRUD"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Define a minimal subset of CRUD capabilities\nthat every application or developer can implement."),Object(i.b)("li",{parentName:"ol"},"Provide an overview of the data access methods that are used to fetch data"),Object(i.b)("li",{parentName:"ol"},"Avoid corner cases or specifics of individual service implementations "),Object(i.b)("li",{parentName:"ol"},"Define a lenient standard based on practices, existing APIs and providers\nthat do not enforce specific naming of root fields, types, etc."),Object(i.b)("li",{parentName:"ol"},"Provide a set of the reference implementations for ",Object(i.b)("em",{parentName:"li"},"different programming languages")),Object(i.b)("li",{parentName:"ol"},"Provide capabilities native to GraphQL (no preprocessors, helpers, annotations, etc.)")),Object(i.b)("h2",{id:"non-targets-of-graphql-crud"},"Non-targets of GraphQL CRUD"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Define every possible method to map database capabilities")),Object(i.b)("p",null,"Over the years, we have seen issues with developers adopting very open CRUD capabilities on the client.\nThere is no silver bullet that will give developers both flexiblity of the query capabilities on the client\nand underlying security and control over what data is exposed to the public.\nThat is why we define only the most common use cases and do not provide a mapping to every capability that a database might expose."),Object(i.b)("p",null,"2) Include CRUD specifics of any specific platforms"),Object(i.b)("p",null,"GraphQL CRUD borrows patterns from existing GraphQL schemas and large GraphQL providers like AWS AppSync and Hasura;\nhowever, it is does not focus on any specific provider itself. "),Object(i.b)("p",null,"3) Defining best practices for writing GraphQL schemas"),Object(i.b)("p",null,"GraphQL CRUD focuses only on providing CRUD capabilities.\nFor general rules for GraphQL schemas see ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://graphql-rules.com"}),"GraphQL Rules")))}l.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=r,f=d["".concat(o,".").concat(b)]||d[b]||u[b]||i;return n?a.a.createElement(f,c(c({ref:t},p),{},{components:n})):a.a.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);