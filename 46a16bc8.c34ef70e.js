(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{151:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(11),i=(n(0),n(167)),c={id:"create",title:"Create Operation",sidebar_label:"Create Operation"},o={id:"create",title:"Create Operation",description:"Create Specification",source:"@site/../docs/spec-create.md",permalink:"/docs/next/create",editUrl:"https://github.com/aerogear/GraphQLCRUD/edit/master/website/../docs/spec-create.md",version:"next",sidebar_label:"Create Operation",sidebar:"docs",previous:{title:"Overview",permalink:"/docs/next/overview"},next:{title:"Update Operation",permalink:"/docs/next/update"}},p=[{value:"Create Specification",id:"create-specification",children:[]}],l={rightToc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"create-specification"},"Create Specification"),Object(i.b)("p",null,"Create operation is enabled accepting single inputType as argument"),Object(i.b)("p",null,"For ",Object(i.b)("inlineCode",{parentName:"p"},"Note")," type:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Note {\n  id: ID!\n  title: String!\n  description: String\n  comments: [Comment]!\n}\n")),Object(i.b)("p",null,"Following mutation can be used"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n  createNote(input: CreateNoteInput!): Note!\n}\n")),Object(i.b)("p",null,"Input type for create operation looks as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"input CreateNoteInput {\n  ## To support client side id creation\n  id: ID\n  title: String!\n  description: String\n}\n")))}s.isMDXComponent=!0}}]);