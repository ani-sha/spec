(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{153:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(2),a=r(10),o=(r(0),r(165)),i={id:"gettingstarted",title:"Getting Started",sidebar_label:"Getting Started"},c={id:"gettingstarted",title:"Getting Started",description:"Introduction",source:"@site/../docs/getting-started.md",permalink:"/docs/next/gettingstarted",editUrl:"https://github.com/aerogear/GraphQLCRUD/edit/master/website/../docs/getting-started.md",version:"next",sidebar_label:"Getting Started",sidebar:"docs",next:{title:"Concepts",permalink:"/docs/next/concepts"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Rationale",id:"rationale",children:[]},{value:"Targets of GraphQLCRUD",id:"targets-of-graphqlcrud",children:[]},{value:"Non targets of GraphQLCRUD",id:"non-targets-of-graphqlcrud",children:[]}],s={rightToc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"GraphQL CRUD is a superset of GraphQL giving developers\npatterns for building standard data driven GraphQL APIs.\nGraphQLCRUD is a fully ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://facebook.github.io/graphql/"}),"GraphQL compliant")," query language that provides patterns for accessing and modification of the data.\nFor example, this GraphQLCRUD query retrieves a single user:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  user(where: { id: 4 }) {\n    name\n  }\n}\n")),Object(o.b)("p",null,"returns:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "user": {\n    "name": "Mark Zuckerberg"\n  }\n}\n')),Object(o.b)("h2",{id:"rationale"},"Rationale"),Object(o.b)("p",null,"GraphQL is a flexible query language supporting many different data access patterns.\nFor most of the projects CRUD operations turn out to be a very common pattern. Defining this very common pattern enables the community to build tooling specific to the common CRUD style API."),Object(o.b)("h2",{id:"targets-of-graphqlcrud"},"Targets of GraphQLCRUD"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Define minimal subset of the CRUD capabilities\nthat every application or developer can consume."),Object(o.b)("li",{parentName:"ol"},"Provide overview of the data access methods that are used to fetch data"),Object(o.b)("li",{parentName:"ol"},"Avoid corner cases or specifics of individual CRUD implementations "),Object(o.b)("li",{parentName:"ol"},"Define lenient standard based on practices, existing API and providers\nthat do not enforce specific query or mutation names etc."),Object(o.b)("li",{parentName:"ol"},"Provide set of the reference implementations for ",Object(o.b)("em",{parentName:"li"},"different programming languages")," in case you want to adopt reference\nimplementation"),Object(o.b)("li",{parentName:"ol"},"Provide capabilities available in vanilla GraphQL (no preprocessors, helpers, annotations etc.)")),Object(o.b)("h2",{id:"non-targets-of-graphqlcrud"},"Non targets of GraphQLCRUD"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Define every possible method to map database or SQL Capabilities")),Object(o.b)("p",null,"Over the years we seen issues with developers adopting very open CRUD capabilities on the client.\nThere is no silver bullet that will give developers both flexiblity of the query capabilities on the client\nand underlying security and control over what data is exposed to the public.\nThat is why we define only the most common use cases and do not target to provide mapping to every capability that database exposes."),Object(o.b)("p",null,"2) Map CRUD specifics of the popular platforms "),Object(o.b)("p",null,"GraphQL CRUD borrows patterns from existing GraphQL schemas and large GraphQL providers like AWS AppSync or Hasura,\nhowever it is not focusing tightly on any specific provider itself. "),Object(o.b)("p",null,"3) Defining best practices for writing GraphQL schemas"),Object(o.b)("p",null,"GraphQL CRUD focuses only on providing CRUD capaiblities.\nFor general rules for GraphQL schemas see ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://graphql-rules.com"}),"GraphQL Rules")))}p.isMDXComponent=!0},165:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,f=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return r?a.a.createElement(f,c(c({ref:t},s),{},{components:r})):a.a.createElement(f,c({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);