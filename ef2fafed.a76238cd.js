(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return r})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(2),i=n(10),p=(n(0),n(165)),o={id:"update",title:"Update Operation"},r={id:"update",title:"Update Operation",description:"Update Specification",source:"@site/../docs/spec-update.md",permalink:"/docs/next/update",editUrl:"https://github.com/aerogear/GraphQLCRUD/edit/master/website/../docs/spec-update.md",version:"next",sidebar:"docs",previous:{title:"Create Operation",permalink:"/docs/next/create"},next:{title:"Delete operation",permalink:"/docs/next/delete"}},c=[{value:"Update Specification",id:"update-specification",children:[]},{value:"Variations",id:"variations",children:[{value:"Conditional updates",id:"conditional-updates",children:[]}]}],d={rightToc:c};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(p.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(p.b)("h2",{id:"update-specification"},"Update Specification"),Object(p.b)("p",null,"Update operation is enabled accepting single inputType as arguments"),Object(p.b)("p",null,"For ",Object(p.b)("inlineCode",{parentName:"p"},"Note")," type:"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Note {\n  id: ID!\n  title: String!\n  description: String\n  comments: [Comment]!\n}\n")),Object(p.b)("p",null,"Following mutation can be used"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n    updateNote(input: MutateNoteInput!): Note!\n}\n")),Object(p.b)("p",null,"Input type for update operation looks as follows"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"input MutateNoteInput {\n  # ID field is required for update\n  id: ID!\n  title: String\n  description: String\n}\n")),Object(p.b)("h2",{id:"variations"},"Variations"),Object(p.b)("h3",{id:"conditional-updates"},"Conditional updates"),Object(p.b)("p",null,"Conditional updates can be enabled for the cases where we want to perform update\noperation only after meeting certain criteria"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n  updateNote(input: MutateNoteInput!, where: UpdateNoteFilter): Note!\n}\n")),Object(p.b)("p",null,"Input type for filtering has all fields marked as optional"),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"input UpdateNoteFilter {\n  title: String\n  description: String\n}\n")))}l.isMDXComponent=!0}}]);